---
layout:     post
title:      "常用的数据加密解密算法"
subtitle:   "Common Encryption Algorithm"
date:       2018-03-21 22:40:00
author:     "ywlvs"
header-img: "img/post-bg-encryption.jpg"
catalog: true
tags:
    - algorithm
---

转[各种加解密算法比较](http://blog.csdn.net/pengzp/article/details/6556674)

---

常用的数据加密算法包括对称加密算法、非对称加密算法以及散列算法

### 对称算法

对称加密算法用来对敏感数据等信息进行加密，常用的算法包括：

DES（Data Encryption Standard）：数据加密标准，速度较快，适用于加密大量数据的场合。

3DES（Triple DES）：是基于DES，对一块数据用三个不同的密钥进行三次加密，强度更高。

AES（Advanced Encryption Standard）：高级加密标准，是下一代的加密算法标准，速度快，安全级别高。

<table border="1">
    <tr>
        <td>算法名称</td>
        <td>算法类型</td>
        <td>密钥长度</td>
        <td>速度</td>
        <td>速度解密时间（每秒尝试255个密钥）</td>
        <td>资源消耗</td>
    </tr>
    <tr>
        <td>AES</td>
        <td>对称 block 密码</td>
        <td>128、192、256 位</td>
        <td>高</td>
        <td>1490000 亿年</td>
        <td>低</td>
    </tr>
    <tr>
        <td>3DES</td>
        <td>对称 feistel 密码</td>
        <td>112 位或 168 位</td>
        <td>低</td>
        <td>46 亿年</td>
        <td>中</td>
    </tr>
</table>

### 非对称算法

RSA：由 RSA 公司发明，是一个支持变长密钥的公共密钥算法，需要加密的文件块的长度也是可变的；

DSA（Digital Signature Algorithm）：数字签名算法，是一种标准的 DSS（数字签名标准）；

ECC（Elliptic Curves Cryptography）：椭圆曲线密码编码学。

ECC 和 RSA 相比，在许多方面都有对绝对的优势，主要体现在以下方面：

抗攻击性强。相同的密钥长度，其抗攻击性要强很多倍。

计算量小，处理速度快。ECC总的速度比RSA、DSA要快得多。

存储空间占用小。ECC的密钥尺寸和系统参数与RSA、DSA相比要小得多，意味着它所占的存贮空间要小得多。这对于加密算法在IC卡上的应用具有特别重要的意义。

带宽要求低。当对长消息进行加解密时，三类密码系统有相同的带宽要求，但应用于短消息时ECC带宽要求却低得多。带宽要求低使ECC在无线网络领域具有广泛的应用前景。

下面两张表示是RSA和ECC的安全性和速度的比较。


RSA 和 ECC 安全模长的比较

<table border="1">
    <tr>
        <td>攻破时间（MIPS 年 ）</td>
        <td>密钥长度（RSA/DSA）</td>
        <td>密钥长度（ECC）</td>
        <td>RSA/ECC 密钥长度比</td>
    </tr>
    <tr>
        <td>10<sup>4</sup></td>
        <td>512</td>
        <td>106</td>
        <td>5:1</td>
    </tr>
    <tr>
        <td>10<sup>8</sup></td>
        <td>768</td>
        <td>132</td>
        <td>6:1</td>
    </tr>
    <tr>
        <td>10<sup>11</sup></td>
        <td>1024</td>
        <td>160</td>
        <td>7:1</td>
    </tr>
    <tr>
        <td>10<sup>20</sup></td>
        <td>2048</td>
        <td>210</td>
        <td>10:1</td>
    </tr>
    <tr>
        <td>10<sup>78</sup></td>
        <td>21000</td>
        <td>600</td>
        <td>35:1</td>
    </tr>
</table>

RSA和ECC速度比较

<table>
    <tr>
        <td rowspan="2">功能</td>
        <td>Security Builder 1.2</td>
        <td>BSAFE 3.0</td>
    </tr>
    <tr>
        <td>163 位 ECC（ms）</td>
        <td>1023 位 RSA（ms）</td>
    </tr>
    <tr>
        <td>密钥对生成</td>
        <td>3.8</td>
        <td>4708.3</td>
    </tr>
    <tr>
        <td rowspan="2">签名</td>
        <td>2.1(ECNRA)</td>
        <td rowspan="2">228.4</td>
    </tr>
    <tr>
        <td>3.0(ECDSA)</td>
    </tr>
    <tr>
        <td rowspan="2">认证</td>
        <td>9.9(ECNRA)</td>
        <td rowspan="2">12.7</td>
    </tr>
    <tr>
        <td>10.7(ECDSA)</td>
    </tr>
    <tr>
        <td>Diffie—Hellman密钥交换</td>
        <td>7.3</td>
        <td>1654.0</td>
    </tr>
</table>


散列是信息的提炼，通常其长度要比信息小得多，且为一个固定长度。加密性强的散列一定是不可逆的，这就意味着通过散列结果，无法推出任何部分的原始信息。任何输入信息的变化，哪怕仅一位，都将导致散列结果的明显变化，这称之为雪崩效应。散列还应该是防冲突的，即找不出具有相同散列结果的两条信息。具有这些特性的散列结果就可以用于验证信息是否被修改。

单向散列函数一般用于产生消息摘要，密钥加密等，常见的有：

+ MD5（Message Digest Algorithm 5）：是 RSA 数据安全公司开发的一种单向散列算法，非可逆，相同的明文产生相同的密文。

+ SHA（Secure Hash Algorithm）：可以对任意长度的数据运算生成一个 160 位的数值。

SHA-1与MD5的比较

因为二者均由 MD4 导出，SHA-1 和 MD5 彼此很相似。相应的，他们的强度和其他特性也是相似，但还有以下几点不同：

+ 对强行供给的安全性：最显著和最重要的区别是 SHA-1 摘要比 MD5 摘要长32 位。使用强行技术，产生任何一个报文使其摘要等于给定报摘要的难度对 MD5 是 2128 数量级的操作，而对 SHA-1 则是 2160 数量级的操作。这样，SHA-1 对强行攻击有更大的强度。

+ 对密码分析的安全性：由于 MD5 的设计，易受密码分析的攻击，SHA-1 显得不易受这样的攻击。

+ 速度：在相同的硬件上，SHA-1 的运行速度比 MD5 慢。


对称与非对称算法比较

以上综述了两种加密方法的原理，总体来说主要有下面几个方面的不同：

+ 在管理方面：公钥密码算法只需要较少的资源就可以实现目的，在密钥的分配上，两者之间相差一个指数级别（一个是n一个是n<sup>2</sup>）。所以私钥密码算法不适应广域网的使用，而且更重要的一点是它不支持数字签名。

+ 在安全方面：由于公钥密码算法基于未解决的数学难题，在破解上几乎不可能。对于私钥密码算法，到了AES虽说从理论来说是不可能破解的，但从计算机的发展角度来看。公钥更具有优越性。

+ 从速度上来看：AES的软件实现速度已经达到了每秒数兆或数十兆比特。是公钥的100倍，如果用硬件来实现的话这个比值将扩大到1000倍。


三.加密算法的选择

由于非对称加密算法的运行速度比对称加密算法的速度慢很多，当我们需要加密大量的数据时，建议采用对称加密算法，提高加解密速度。

对称加密算法不能实现签名，因此签名只能非对称算法。

由于对称加密算法的密钥管理是一个复杂的过程，密钥的管理直接决定着他的安全性，因此当数据量很小时，我们可以考虑采用非对称加密算法。

在实际的操作过程中，我们通常采用的方式是：采用非对称加密算法管理对称算法的密钥，然后用对称加密算法加密数据，这样我们就集成了两类加密算法的优点，既实现了加密速度快的优点，又实现了安全方便管理密钥的优点。

那采用多少位的密钥呢？ RSA建议采用1024位的数字，ECC建议采用160位，AES采用128为即可。

四.密码学在现代的应用

保密通信：保密通信是密码学产生的动因。使用公私钥密码体制进行保密通信时，信息接收者只有知道对应的密钥才可以解密该信息。

数字签名：数字签名技术可以代替传统的手写签名，而且从安全的角度考虑，数字签名具有很好的防伪造功能。在政府机关、军事领域、商业领域有广泛的应用环境。

秘密共享：秘密共享技术是指将一个秘密信息利用密码技术分拆成 n 个称为共享因子的信息，分发给 n 个成员，只有 k (k≤n) 个合法成员的共享因子才可以恢复该秘密信息，其中任何一个或 m(m≤k) 个成员合作都不知道该秘密信息。利用秘密共享技术可以控制任何需要多个人共同控制的秘密信息、命令等。

认证功能：在公开的信道上进行敏感信息的传输，采用签名技术实现对消息的真实性、完整性进行验证，通过验证公钥证书实现对通信主体的身份验证。

密钥管理：密钥是保密系统中更为脆弱而重要的环节，公钥密码体制是解决密钥管理工作的有力工具；利用公钥密码体制进行密钥协商和产生，保密通信双方不需要事先共享秘密信息；利用公钥密码体制进行密钥分发、保护、密钥托管、密钥恢复等。

基于公钥密码体制可以实现以上通用功能以外，还可以设计实现以下的系统：安全电子商务系统、电子现金系统、电子选举系统、电子招投标系统、电子彩票系统等。